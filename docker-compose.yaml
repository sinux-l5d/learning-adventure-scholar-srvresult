version: '3.3'
services:
  app:
    build: .
    restart: unless-stopped
    ports:
      - '${APP_PORT_EXT:-3001}:3001'
    environment:
      APP_ROOT: '${APP_ROOT:-/}'
      MONGO_APP_USER: '${MONGO_APP_USER?error MONGO_APP_USER is not set}'
      MONGO_APP_PWD: ${MONGO_APP_PWD?error MONGO_APP_PWD is not set}
      MONGO_DB_NAME: ${MONGO_DB_NAME?error MONGO_DB_NAME is not set}
      MONGO_PORT_EXT: ${MONGO_PORT_EXT?error MONGO_PORT_EXT is not set}
      MONGO_HOST: db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - lawebnetwork
      - db

  db:
    image: mongo:5.0.6
    restart: unless-stopped
    volumes:
      - './mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js'
      - 'srvexo-data-db:/data/db'
    environment:
      MONGO_INITDB_USER: ${MONGO_APP_USER?error MONGO_APP_USER is not set}
      MONGO_INITDB_PASSWORD: ${MONGO_APP_PWD?error MONGO_APP_PWD is not set}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME?error MONGO_DB_NAME is not set}
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongosh -u $MONGO_INITDB_USER -p $MONGO_INITDB_PASSWORD --quiet
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s
    networks:
      - db

volumes:
  srvexo-data-db:

networks:
  lawebnetwork:
    name: ${APP_NETWORK_NAME:-lawebnetwork} # force le nom du network
  db:
